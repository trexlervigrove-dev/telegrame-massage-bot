#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Telegram –±–æ—Ç –¥–ª—è –º–∞—Å—Å–∞–∂–Ω–æ–≥–æ —Å–∞–ª–æ–Ω–∞
"""

import logging
import os
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–ø—Ä—è–º—É—é)
TOKEN = os.environ.get("BOT_TOKEN", "8303617974:AAHs-XXzV9iB6QYJdeHLengGoEMxDbdvmU4")


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
    keyboard = [
        [InlineKeyboardButton("–ö–∞—Ç–∞–ª–æ–≥ ¬´–º–∞—Å—Å–∞–∂–∏—Å—Ç–æ–∫¬ª –¥–æ—Å—Ç—É–ø–µ–Ω 24/7", url="https://t.me/lovelovesteppe")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = "–¢–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä —Å ¬´–æ–ö–æ–Ω—á–∞–Ω–∏–µ–º¬ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å"
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)
    logger.info(f"User {user.id} ({user.username}) started the bot")


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
    keyboard = [
        [InlineKeyboardButton("–ö–∞—Ç–∞–ª–æ–≥ ¬´–º–∞—Å—Å–∞–∂–∏—Å—Ç–æ–∫¬ª –¥–æ—Å—Ç—É–ø–µ–Ω 24/7", url="https://t.me/lovelovesteppe")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    response = "–¢–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä —Å ¬´–æ–ö–æ–Ω—á–∞–Ω–∏–µ–º¬ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å"
    
    await update.message.reply_text(response, reply_markup=reply_markup)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    keyboard = [
        [InlineKeyboardButton("–ö–∞—Ç–∞–ª–æ–≥ ¬´–º–∞—Å—Å–∞–∂–∏—Å—Ç–æ–∫¬ª –¥–æ—Å—Ç—É–ø–µ–Ω 24/7", url="https://t.me/lovelovesteppe")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    help_text = "–¢–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –≤–µ—á–µ—Ä —Å ¬´–æ–ö–æ–Ω—á–∞–Ω–∏–µ–º¬ª –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –∑–¥–µ—Å—å"
    await update.message.reply_text(help_text, reply_markup=reply_markup)


async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Update {update} caused error {context.error}")


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    logger.info("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –º–∞—Å—Å–∞–∂–Ω–æ–≥–æ —Å–∞–ª–æ–Ω–∞...")
    
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    logger.info("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
    logger.info("üì± –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ: @masagekzbot")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º polling
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if name == "__main__":
    main()
